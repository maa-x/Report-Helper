package com.pentest.reporthelper;

import java.awt.*;
import javax.swing.*;
import org.fife.ui.rtextarea.*;

import com.pentest.reporthelper.ui.component.ReportHelperTextArea;

import org.fife.ui.rsyntaxtextarea.*;
import java.nio.file.*;
import java.io.IOException;

public class MainTestWindow extends JFrame {

    public MainTestWindow() {

        JPanel cp = new JPanel(new BorderLayout());

        RSyntaxTextArea textArea = new ReportHelperTextArea(null, "/com/pentest/reporthelper/ui/themes/git.xml");
        // RSyntaxTextArea textArea = new RSyntaxTextArea();

        textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_NONE);
        textArea.setCodeFoldingEnabled(true);
        textArea.setLineWrap(false);
        RTextScrollPane sp = new RTextScrollPane(textArea);
        cp.add(sp);

        // Read the contents of /tmp/t.txt and set the textArea's text to the file's contents
        try {
            String contents = new String(Files.readAllBytes(Paths.get("/tmp/t.txt")));
            textArea.setText(contents);
        } catch (IOException e) {
            e.printStackTrace();
        }

        setContentPane(cp);
        setTitle("Text Editor Demo");
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        pack();
        setLocationByPlatform(true);

    }

    public static void runPerformanceTest(String[] filePaths) {
        long startTime = System.currentTimeMillis();

        for (String filePath : filePaths) {
            try {
                String contents = new String(Files.readAllBytes(Paths.get(filePath)));
            

                JPanel cp = new JPanel(new BorderLayout());
                RSyntaxTextArea textArea = new ReportHelperTextArea(null, "/com/pentest/reporthelper/ui/themes/git.xml");
                textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_NONE);
                textArea.setCodeFoldingEnabled(true);
                textArea.setLineWrap(false);
                RTextScrollPane sp = new RTextScrollPane(textArea);
                cp.add(sp);
                textArea.setText(contents);
                JFrame frame = new JFrame("Performance Test");
                frame.setContentPane(cp);
                frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                frame.pack();
                frame.setLocationByPlatform(true);
                frame.setVisible(true);
                textArea.selectAll();
                textArea.setCaretPosition(0);


                // Ensure the UI is fully drawn and ready
                try {
                    SwingUtilities.invokeAndWait(() -> {
                        try {
                            RepaintManager.currentManager(frame).paintDirtyRegions();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    });
                } catch (InterruptedException | java.lang.reflect.InvocationTargetException e) {
                    e.printStackTrace();
                }
                frame.dispose();

                System.out.println("Loaded file: " + filePath);
            } catch (IOException e) {
                System.err.println("Failed to load file: " + filePath);
                e.printStackTrace();
            }
        }

        long endTime = System.currentTimeMillis();
        System.out.println("Performance test completed in " + (endTime - startTime) + " ms");
    }

    public static void main(String[] args) {
        if (args.length > 0 && args[0].equals("test")) {
            // Run performance test with provided file paths
            String[] testFiles = {"/tmp/t1.txt", "/tmp/t2.txt", "/tmp/t3.txt", "/tmp/t4.txt", "/tmp/t5.txt", "/tmp/t6.txt", "/tmp/t7.txt"};
            runPerformanceTest(testFiles);
        } else {
            // Start all Swing applications on the EDT.
            SwingUtilities.invokeLater(() -> new MainTestWindow().setVisible(true));
        }
    }
}